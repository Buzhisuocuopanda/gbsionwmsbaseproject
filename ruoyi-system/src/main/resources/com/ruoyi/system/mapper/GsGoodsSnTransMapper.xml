<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.GsGoodsSnTransMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.system.domain.GsGoodsSnTrans">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="trans_type" jdbcType="TINYINT" property="transType" />
    <result column="trans_id" jdbcType="INTEGER" property="transId" />
    <result column="trans_line_id" jdbcType="VARCHAR" property="transLineId" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="scan_by" jdbcType="INTEGER" property="scanBy" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_by, update_by, sn, trans_type, trans_id, trans_line_id, 
    wh_id, goods_id, scan_by, location_id
  </sql>
  <select id="selectByExample" parameterType="com.ruoyi.system.domain.GsGoodsSnTransCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `gs_goods_sn_trans`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `gs_goods_sn_trans`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `gs_goods_sn_trans`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.system.domain.GsGoodsSnTransCriteria">
    delete from `gs_goods_sn_trans`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.system.domain.GsGoodsSnTrans">
    insert into `gs_goods_sn_trans` (id, create_time, update_time, 
      create_by, update_by, sn, 
      trans_type, trans_id, trans_line_id, 
      wh_id, goods_id, scan_by, 
      location_id)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, 
      #{transType,jdbcType=TINYINT}, #{transId,jdbcType=INTEGER}, #{transLineId,jdbcType=VARCHAR}, 
      #{whId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{scanBy,jdbcType=INTEGER}, 
      #{locationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.system.domain.GsGoodsSnTrans">
    insert into `gs_goods_sn_trans`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="transType != null">
        trans_type,
      </if>
      <if test="transId != null">
        trans_id,
      </if>
      <if test="transLineId != null">
        trans_line_id,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="scanBy != null">
        scan_by,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="transType != null">
        #{transType,jdbcType=TINYINT},
      </if>
      <if test="transId != null">
        #{transId,jdbcType=INTEGER},
      </if>
      <if test="transLineId != null">
        #{transLineId,jdbcType=VARCHAR},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="scanBy != null">
        #{scanBy,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.system.domain.GsGoodsSnTransCriteria" resultType="java.lang.Long">
    select count(*) from `gs_goods_sn_trans`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `gs_goods_sn_trans`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.transType != null">
        trans_type = #{record.transType,jdbcType=TINYINT},
      </if>
      <if test="record.transId != null">
        trans_id = #{record.transId,jdbcType=INTEGER},
      </if>
      <if test="record.transLineId != null">
        trans_line_id = #{record.transLineId,jdbcType=VARCHAR},
      </if>
      <if test="record.whId != null">
        wh_id = #{record.whId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.scanBy != null">
        scan_by = #{record.scanBy,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null">
        location_id = #{record.locationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `gs_goods_sn_trans`
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR},
      trans_type = #{record.transType,jdbcType=TINYINT},
      trans_id = #{record.transId,jdbcType=INTEGER},
      trans_line_id = #{record.transLineId,jdbcType=VARCHAR},
      wh_id = #{record.whId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      scan_by = #{record.scanBy,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.system.domain.GsGoodsSnTrans">
    update `gs_goods_sn_trans`
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="transType != null">
        trans_type = #{transType,jdbcType=TINYINT},
      </if>
      <if test="transId != null">
        trans_id = #{transId,jdbcType=INTEGER},
      </if>
      <if test="transLineId != null">
        trans_line_id = #{transLineId,jdbcType=VARCHAR},
      </if>
      <if test="whId != null">
        wh_id = #{whId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="scanBy != null">
        scan_by = #{scanBy,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.system.domain.GsGoodsSnTrans">
    update `gs_goods_sn_trans`
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      sn = #{sn,jdbcType=VARCHAR},
      trans_type = #{transType,jdbcType=TINYINT},
      trans_id = #{transId,jdbcType=INTEGER},
      trans_line_id = #{transLineId,jdbcType=VARCHAR},
      wh_id = #{whId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      scan_by = #{scanBy,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>